<!DOCTYPE html>
<html>
<head>
    <title>MeMiX ReMiX</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

</head>

<body>
    <h1>MeMiX ReMiX</h1>

    @*<audio controls>
            <source src="~/music/Keys.mp3" type="audio/mp3" />
        </audio>*@
    <p> <h5>HOW IT WORKS:</h5></p>
    <ol>
        <li>Make an audio clip selection for each instrument</li>
        @*<li>Press the 'Load' button for each instrument to get it ready to play</li>*@
        <li>Click 'Play your song' and you will hear your results</li>
        <li>Repeat steps 1 & 2 you much as you like</li>
        <li>Save it when you have created your masterpiece</li>
    </ol>
    <table>
        <tr>
            <td>
                <p>Bass</p>
            </td>
            <td>
                <select id="bass-select" onchange="javascript:bassLoader2();">
                    <option value="/music/Empty.mp3">--</option>
                    <option value="/music/bass/Bass1.mp3">Bass1</option>
                    <option value="/music/bass/Bass2.mp3">Bass2</option>
                    <option value="/music/bass/Bass3.mp3">Bass3</option>
                    <option value="/music/bass/Bass4.mp3">Bass4</option>
                </select>
            </td>
            <td>
                @*<button id="load-bass" onclick="bassLoader()" type="button">Load Bass</button>*@
            </td>
        </tr>
        <tr>
            <td><p>Synth</p></td>
            <td>
                <select id="synth-select" onchange="javascript: synthLoader2();">
                    <option value="/music/Empty.mp3">--</option>
                    <option value="/music/synth/synth1.mp3">Synth1</option>
                    <option value="/music/synth/synth2.mp3">Synth2</option>
                    <option value="/music/synth/synth3.mp3">Synth3</option>
                    <option value="/music/synth/synth4.mp3">Synth4</option>
                    <option value="/music/synth/synth5.mp3">Synth5</option>

                </select>
            </td>
            <td>
                @*<button id="load-keys" onclick="keysLoader()" type="button">Load Keyboards</button>*@
            </td>
        </tr>
        <tr>
            <td><p>Drums</p></td>
            <td>
                <select id="drums-select" onchange="javascript: drumLoader2();">
                    <option value="/music/Empty.mp3">--</option>
                    <option value="/music/drums/Drums1.mp3">Drums1</option>
                    <option value="/music/drums/Drums2.mp3">Drums2</option>
                    <option value="/music/drums/Drums3.mp3">Drums3</option>
                    <option value="/music/drums/Drums4.mp3">Drums4</option>
                    <option value="/music/drums/Drums5.mp3">Drums5</option>
                    <option value="/music/drums/Drums6.mp3">Drums6</option>

                </select>
            </td>
        <tr>
            <td><p>Glitch</p></td>
            <td>
                <select id="glitch-select" onchange="javascript: glitchLoader2();">
                    <option value="/music/Empty.mp3">--</option>
                    <option value="/music/glitch/glitch1.mp3">Glitch1</option>
                    <option value="/music/glitch/glitch2.mp3">Glitch2</option>
                    <option value="/music/glitch/glitch3.mp3">Glitch3</option>
                    <option value="/music/glitch/glitch4.mp3">Glitch4</option>
                    <option value="/music/glitch/glitch5.mp3">Glitch5</option>
                    <option value="/music/glitch/glitch6.mp3">Glitch6</option>
                </select>
            </td>
        </tr>
        <tr>
            <td><p>Lead</p></td>
            <td>
                <select id="lead-select">
                    <option value="--">--</option>
                </select>
            </td>
            <td>
                @*<button id="load-drums" onclick="drumLoader()" type="button">Load Drums</button>*@
            </td>
        </tr>
        <tr>
            <td>
                <button type="button" id="play-song" data-playing="false" aria-checked="false">Play Your Song</button>
            </td>
            <td>
                <button id="stop-song" onlick="stopSong()" data-playing="true" aria-checked="true" type="button" disabled>Make it Stop!!!</button>
            </td>
        </tr>
    </table>

    <p><h4>Like what you've made? Give it a title and save it for later!</h4></p>

    <input value="feature coming soon" type="text" />
    <button type="submit">Save it!!!</button>


    <script type="text/javascript">

        var audioCtx = new AudioContext();
        var synth;
        var drums;
        var bass;
        var glitch;

        function keysLoader() {

            // If no mp3 selected, do nothing
            var e = document.getElementById("keys-select");
            var keysValue = e.options[e.selectedIndex].value;
            if (keysValue === "") {
                
            } else {
                // Else get the Sound
                var getSound1 = new XMLHttpRequest();
                getSound1.open("GET", keysValue, true);
                getSound1.responseType = "arraybuffer";
                getSound1.onload = function () {
                    audioCtx.decodeAudioData(getSound1.response, function (buffer) {
                        keyboards = buffer;
                    });
                }
            };
            getSound1.send();
        };

        function drumLoader() {
            var e = document.getElementById("drums-select");
            var drumValue = e.options[e.selectedIndex].value;
            if (drumValue === "--") {

            } else {
                var getSound2 = new XMLHttpRequest();
                getSound2.open("GET", drumValue, true);
                getSound2.responseType = "arraybuffer";
                getSound2.onload = function () {
                    audioCtx.decodeAudioData(getSound2.response, function (buffer) {
                        drums = buffer;
                    });
                }
            };
            getSound2.send();
        };

        //var loadBass = document.querySelector("load-bass");

        function bassLoader() {
            var e = document.getElementById("bass-select");
            var bassValue = e.options[e.selectedIndex].value;
            if (bassValue === "") {
                // TODO figure out how to unload MP3s when '--' is re-selected in the drop-down
            } else {
                var getSound3 = new XMLHttpRequest();
                getSound3.open("GET", bassValue, true);
                getSound3.responseType = "arraybuffer";
                getSound3.onload = function () {
                    audioCtx.decodeAudioData(getSound3.response, function (buffer) {
                        bass = buffer;
                    });
                }
            };
            getSound3.send();
        };

        function synthLoader2() {

            // If no mp3 selected, do nothing
            var e = document.getElementById("synth-select");
            var synthValue = e.options[e.selectedIndex].value;
            if (synthValue === "") {

            } else {
                // Else get the Sound
                var getSound1 = new XMLHttpRequest();
                getSound1.open("GET", synthValue, true);
                getSound1.responseType = "arraybuffer";
                getSound1.onload = function () {
                    audioCtx.decodeAudioData(getSound1.response, function (buffer) {
                        synth = buffer;
                    });
                }
            };
            getSound1.send();
        };

        function drumLoader2() {
            var e = document.getElementById("drums-select");
            var drumValue = e.options[e.selectedIndex].value;
            if (drumValue === "--") {

            } else {
                var getSound2 = new XMLHttpRequest();
                getSound2.open("GET", drumValue, true);
                getSound2.responseType = "arraybuffer";
                getSound2.onload = function () {
                    audioCtx.decodeAudioData(getSound2.response, function (buffer) {
                        drums = buffer;
                    });
                }
            };
            getSound2.send();
        };

        //var loadBass = document.querySelector("load-bass");

        function bassLoader2() {
            var e = document.getElementById("bass-select");
            var bassValue = e.options[e.selectedIndex].value;
            if (bassValue === "") {

            } else {
                var getSound3 = new XMLHttpRequest();
                getSound3.open("GET", bassValue, true);
                getSound3.responseType = "arraybuffer";
                getSound3.onload = function () {
                    audioCtx.decodeAudioData(getSound3.response, function (buffer) {
                        bass = buffer;
                    });
                }
            };
            getSound3.send();
        };

        function glitchLoader2() {
            var e = document.getElementById("glitch-select");
            var glitchValue = e.options[e.selectedIndex].value;
            if (glitchValue === "") {

            } else {
                var getSound4 = new XMLHttpRequest();
                getSound4.open("GET", glitchValue, true);
                getSound4.responseType = "arraybuffer";
                getSound4.onload = function () {
                    audioCtx.decodeAudioData(getSound4.response, function (buffer) {
                        glitch = buffer;
                    });
                }
            };
            getSound4.send();
        };
        var playButton = document.getElementById("play-song")
        count = 0;

        playButton.addEventListener('click', function () {

            // Eliminates 2 instances of song playing at same time upon multiple 'play' clicks
            playButton.onclick = function () {
                count += 1;
            }
            if (count < 1) {

                // Plays tracks
                var playTrack = audioCtx.createBufferSource();
                playTrack.buffer = synth;
                playTrack.connect(audioCtx.destination);
                playTrack.start(0);

                var playTrack2 = audioCtx.createBufferSource();
                playTrack2.buffer = drums;
                playTrack2.connect(audioCtx.destination);
                playTrack2.start(0);

                var playTrack3 = audioCtx.createBufferSource();
                playTrack3.buffer = bass;
                playTrack3.connect(audioCtx.destination);
                playTrack3.start(0);

                var playTrack4 = audioCtx.createBufferSource();
                playTrack4.buffer = glitch;
                playTrack4.connect(audioCtx.destination);
                playTrack4.start(0);

                playButton.disabled = true;
            }

            // Stop playback & reset 'Play' button counter to 0 to allow song to be started over
            var stopButton = document.getElementById("stop-song");
            stopButton.disabled = false;

            stopButton.addEventListener('click', function () {
                playTrack.stop();
                playTrack2.stop();
                playTrack3.stop();
                playTrack4.stop();

                playButton.disabled = false;
                stopButton.disabled = true;

                count = 0;

            });

        });

                //function (dropContext) {
                //    playTrack.disconnect();
                //    playTrack2.disconnect();
                //    playTrack3.disconnect();
                //    audioCtx.close();

                //};



    </script>


</body>
</html>