@*@model IEnumerable<MeMiXReMiX.Models.Song>*@
@model MeMiXReMiX.ViewModels.ViewSongsViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager


@{
    @if (Model.ApplicationUserUserName == "")
    {
        ViewData["Title"] = "All Songs";
    } else if (Model.ApplicationUserUserName == @UserManager.GetUserName(User))
    {
        ViewData["Title"] = "Your Songs";
    } else
    {
        ViewData["Title"] = Model.ApplicationUserUserName + "'s Songs";
    }
}

<h1>@ViewData["Title"]</h1>

<ul>
    @foreach (var song in Model.Songs)
    {
        <li class="songs" value="42">
            <p>"@song.Title", created by <a asp-controller="Home" asp-action="ViewSongs" asp-route-username=@song.ApplicationUserUserName>@song.ApplicationUserUserName</a></p>
            <button class="play" onclick="javascript: songPlayer('@song.FilePointer', '@song.ID');">Play</button>
            <button class="stop" id="@song.ID" disabled>Stop</button>
        </li>
    }
</ul>

<form asp-controller="Home" asp-action="Index" method="get">
    <button>Go Create More Songs</button>
</form>

<script type="text/javascript">

    var audioCtx = new AudioContext();

    //urls to be concatenated into full file paths/name
    var drumURLSegment = "/media/music/Drums/Drums";
    var bassURLSegment = "/media/music/Bass/Bass";
    var chordsURLSegment = "/media/music/Chords/Chords";
    var melodicURLSegment = "/media/music/Melodic/Melodic";

    var instrumentUrlSegments = [drumURLSegment, bassURLSegment, chordsURLSegment, melodicURLSegment];

    // TODO Refactor this somehow with a loop that actually works.
    function songPlayer(filePointer, stopID) {

        var fP = filePointer;

        var fileNum1 = fP[0];
        var fileNum2 = fP[1];
        var fileNum3 = fP[2];
        var fileNum4 = fP[3];

        var fileURL1 = instrumentUrlSegments[0] + fileNum1 + ".mp3";
        var fileURL2 = instrumentUrlSegments[1] + fileNum2 + ".mp3";
        var fileURL3 = instrumentUrlSegments[2] + fileNum3 + ".mp3";
        var fileURL4 = instrumentUrlSegments[3] + fileNum4 + ".mp3";

        var newAudioBuffer1;
        var newAudioBuffer2;
        var newAudioBuffer3;
        var newAudioBuffer4;

        stopSong = document.getElementById(stopID);
        stopSong.disabled = false;

        var playButtons = document.getElementsByClassName('play');

        for (var i = playButtons.length - 1; i >= 0; i--) {
            playButtons[i].disabled = true;
        };


        var getAudio1 = new XMLHttpRequest();
        getAudio1.open("GET", fileURL1, true);
        getAudio1.responseType = "arraybuffer";
        getAudio1.onload = function () {
            audioCtx.decodeAudioData(getAudio1.response, function (buffer) {

                newAudioBuffer1 = buffer;

                var playTrack = audioCtx.createBufferSource();
                playTrack.buffer = newAudioBuffer1;
                playTrack.connect(audioCtx.destination);
                playTrack.loop = true;
                playTrack.start(0);

                stopSong.addEventListener('click', function () {

                    stopSong.disabled = true;

                    var playButtons = document.getElementsByClassName('play');

                    for (var i = playButtons.length - 1; i >= 0; i--) {
                        playButtons[i].disabled = false;
                    };

                    playTrack.stop();
                });
            });
        };
        getAudio1.send();

        var getAudio2 = new XMLHttpRequest();
        getAudio2.open("GET", fileURL2, true);
        getAudio2.responseType = "arraybuffer";
        getAudio2.onload = function () {
            audioCtx.decodeAudioData(getAudio2.response, function (buffer) {


                newAudioBuffer2 = buffer;

                var playTrack2 = audioCtx.createBufferSource();
                playTrack2.buffer = newAudioBuffer2;
                playTrack2.connect(audioCtx.destination);
                playTrack2.loop = true;
                playTrack2.start(0);

                stopSong.addEventListener('click', function () {

                    stopSong.disabled = true;

                    var playButtons = document.getElementsByClassName('play');

                    for (var i = playButtons.length - 1; i >= 0; i--) {
                        playButtons[i].disabled = false;
                    };

                    playTrack2.stop();
                });
            });
        };
        getAudio2.send();

        var getAudio3 = new XMLHttpRequest();
        getAudio3.open("GET", fileURL3, true);
        getAudio3.responseType = "arraybuffer";
        getAudio3.onload = function () {
            audioCtx.decodeAudioData(getAudio3.response, function (buffer) {


                newAudioBuffer3 = buffer;

                var playTrack3 = audioCtx.createBufferSource();
                playTrack3.buffer = newAudioBuffer3;
                playTrack3.connect(audioCtx.destination);
                playTrack3.loop = true;
                playTrack3.start(0);

                stopSong.addEventListener('click', function () {
                    stopSong.disabled = true;

                    var playButtons = document.getElementsByClassName('play');

                    for (var i = playButtons.length - 1; i >= 0; i--) {
                        playButtons[i].disabled = false;
                    };

                    playTrack3.stop();
                });
            });
        };
        getAudio3.send();

        var getAudio4 = new XMLHttpRequest();
        getAudio4.open("GET", fileURL4, true);
        getAudio4.responseType = "arraybuffer";
        getAudio4.onload = function () {
            audioCtx.decodeAudioData(getAudio4.response, function (buffer) {


                newAudioBuffer4 = buffer;

                var playTrack4 = audioCtx.createBufferSource();
                playTrack4.buffer = newAudioBuffer4;
                playTrack4.connect(audioCtx.destination);
                playTrack4.loop = true;
                playTrack4.start(0);

                stopSong.addEventListener('click', function () {

                    stopSong.disabled = true;

                    var playButtons = document.getElementsByClassName('play');

                    for (var i = playButtons.length - 1; i >= 0; i--) {
                        playButtons[i].disabled = false;
                    };

                    playTrack4.stop();
                });
            });
        };
        getAudio4.send();

    };

</script>