@model MeMiXReMiX.ViewModels.ViewUserSongsViewModel


@{
    ViewData["Title"] = "Your Saved Songs";
}

<h1>Your Songs</h1>

<ul>
    @foreach (var song in Model.Songs)
    {
        <li class="songs" value="42">
            <p>@song.Title</p>
            <button class="play" onclick="javascript: songPlayer('@song.FilePointer', '@song.ID');">Play</button>
            <button class="stop" id="@song.ID" disabled>Stop</button>
        </li>
    }
</ul>

<form asp-controller="Home" asp-action="MakeSongs" method="get">
    <button>Go Create More Songs</button>
</form>

<script type="text/javascript">

    var audioCtx = new AudioContext();
    //initialize variables to be used upon play click
    var inst1;
    var inst2;
    var inst3;
    var inst4;
    var inst5;
    var instrument;

    //urls to be concatenated into full file paths/name
    var bassURL = "/music/bass/bass";
    var synthURL = "/music/synth/synth";
    var drumURL = "/music/drums/drums";
    var glitchURL = "/music/glitch/glitch";

    var inst = [bassURL, synthURL, drumURL, glitchURL];

    // TODO Refactor this somehow with a loop that actually works.
    function songPlayer(filePointer, stopID) {

        var fP = filePointer;

        var fileNum1 = fP[0];
        var fileNum2 = fP[1];
        var fileNum3 = fP[2];
        var fileNum4 = fP[3];

        var fileURL1 = inst[0] + fileNum1 + ".mp3";
        var fileURL2 = inst[1] + fileNum2 + ".mp3";
        var fileURL3 = inst[2] + fileNum3 + ".mp3";
        var fileURL4 = inst[3] + fileNum4 + ".mp3";

        var instrument1;
        var instrument2;
        var instrument3;
        var instrument4;

        stopSong = document.getElementById(stopID);
        stopSong.disabled = false;

        var playButtons = document.getElementsByClassName('play');

        for (var i = playButtons.length - 1; i >= 0; i--) {
            playButtons[i].disabled = true;
        };


        var getAudio1 = new XMLHttpRequest();
        getAudio1.open("GET", fileURL1, true);
        getAudio1.responseType = "arraybuffer";
        getAudio1.onload = function () {
            audioCtx.decodeAudioData(getAudio1.response, function (buffer) {

                instrument1 = buffer;

                var playTrack = audioCtx.createBufferSource();
                playTrack.buffer = instrument1;
                playTrack.connect(audioCtx.destination);
                playTrack.loop = true;
                playTrack.start(0);

                stopSong.addEventListener('click', function () {

                    stopSong.disabled = true;

                    var playButtons = document.getElementsByClassName('play');

                    for (var i = playButtons.length - 1; i >= 0; i--) {
                        playButtons[i].disabled = false;
                    };

                    playTrack.stop();
                });
            });
        };
        getAudio1.send();

        var getAudio2 = new XMLHttpRequest();
        getAudio2.open("GET", fileURL2, true);
        getAudio2.responseType = "arraybuffer";
        getAudio2.onload = function () {
            audioCtx.decodeAudioData(getAudio2.response, function (buffer) {


                instrument2 = buffer;

                var playTrack2 = audioCtx.createBufferSource();
                playTrack2.buffer = instrument2;
                playTrack2.connect(audioCtx.destination);
                playTrack2.loop = true;
                playTrack2.start(0);

                stopSong.addEventListener('click', function () {

                    stopSong.disabled = true;

                    var playButtons = document.getElementsByClassName('play');

                    for (var i = playButtons.length - 1; i >= 0; i--) {
                        playButtons[i].disabled = false;
                    };

                    playTrack2.stop();
                });
            });
        };
        getAudio2.send();

        var getAudio3 = new XMLHttpRequest();
        getAudio3.open("GET", fileURL3, true);
        getAudio3.responseType = "arraybuffer";
        getAudio3.onload = function () {
            audioCtx.decodeAudioData(getAudio3.response, function (buffer) {


                instrument3 = buffer;

                var playTrack3 = audioCtx.createBufferSource();
                playTrack3.buffer = instrument3;
                playTrack3.connect(audioCtx.destination);
                playTrack3.loop = true;
                playTrack3.start(0);

                stopSong.addEventListener('click', function () {
                    stopSong.disabled = true;

                    var playButtons = document.getElementsByClassName('play');

                    for (var i = playButtons.length - 1; i >= 0; i--) {
                        playButtons[i].disabled = false;
                    };

                    playTrack3.stop();
                });
            });
        };
        getAudio3.send();

        var getAudio4 = new XMLHttpRequest();
        getAudio4.open("GET", fileURL4, true);
        getAudio4.responseType = "arraybuffer";
        getAudio4.onload = function () {
            audioCtx.decodeAudioData(getAudio4.response, function (buffer) {


                instrument4 = buffer;

                var playTrack4 = audioCtx.createBufferSource();
                playTrack4.buffer = instrument4;
                playTrack4.connect(audioCtx.destination);
                playTrack4.loop = true;
                playTrack4.start(0);

                stopSong.addEventListener('click', function () {

                    stopSong.disabled = true;

                    var playButtons = document.getElementsByClassName('play');

                    for (var i = playButtons.length - 1; i >= 0; i--) {
                        playButtons[i].disabled = false;
                    };

                    playTrack4.stop();
                });
            });
        };
        getAudio4.send();

    };

</script>

